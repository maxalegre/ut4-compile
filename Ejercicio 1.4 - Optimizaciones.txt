IfThenElse (pliegue, propagación y eliminación):
	- Si la condición es constante TRUE el cuerpo Else se elimina
	- Si la condición es constante FALSE el cuerpo Then se elimina
Ejemplo:
	a = true; if (a) then: cuerpoThen else: cuerpoElse => a = true; cuerpoThen;
	a = false; if (a) then: cuerpoThen else: cuerpoElse => a = false; cuerpoElse;

IfThen (pliegue, propagación y eliminación):
	- Si la condición es constante FALSE se elimina el If completo
Ejemplo: 
	a = false; if (a) then: cuerpo => a = true;

<<<<<<< HEAD
b & & true -> b 
b & & false -> false 


En el AST Addition
a + 0 -> a

En el AST Substraction
a - 0 -> a
a - a -> 0

En el AST Multiplication
a * 0 -> 0
a * 1 -> a

En el AST CompareEquals
a == a -> true

En el AST CompareNotEquals
a != a -> false

En el AST CompareLessOrEquals
a <= a -> true

En el AST CompareGreaterOrEquals
a >= a -> true

En el AST CompareLessOrEquals
a <= a -> true

En el AST CompareGreaterOrEquals
a >= a -> true

En el AST CompareLessOrEquals
a < a -> false

En el AST CompareGreaterOrEquals
a > a -> false



=======
Asignaciones:
	Cuando se hace una asignacion se puede chequear que ya 
    	existan asignaciones anteriores y si estas son ctes se hace 
    	un pliegue, o sea se reemplaza la aparicion de la variable 
    	por su valor cte y luego en pasadas posteriores se puede hacer una eliminacion.
Ejemplo:
	Int a = 2; a = a + b; => int a; a = 2 + b;


WhileDo:
	Si la condicion del while es FALSE constante aplicamos eliminacion de codigo en el cuerpo del whileDO
Ejemplo:
	a =false ; while (a) do: body; => a = false;

Sequence:
	Si tenemos la sentencia con varios skip seguidos podemos aplicar elminacion de codigo
Ejemplo:
	skip; skip; skip; => skip;
>>>>>>> b3166d45375c90e0dbb09cc213b2ea61be605d1c
